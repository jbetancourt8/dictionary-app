[{"/Users/jbetancourt/Desktop/React-Projects/dictionary-app/src/index.js":"1","/Users/jbetancourt/Desktop/React-Projects/dictionary-app/src/App.js":"2","/Users/jbetancourt/Desktop/React-Projects/dictionary-app/src/components/Definitions/Definitions.js":"3","/Users/jbetancourt/Desktop/React-Projects/dictionary-app/src/components/Header/Header.js":"4","/Users/jbetancourt/Desktop/React-Projects/dictionary-app/src/data/categories.js":"5"},{"size":219,"mtime":1610657902041,"results":"6","hashOfConfig":"7"},{"size":1999,"mtime":1610678627906,"results":"8","hashOfConfig":"7"},{"size":2237,"mtime":1610679033209,"results":"9","hashOfConfig":"7"},{"size":1835,"mtime":1610740230051,"results":"10","hashOfConfig":"7"},{"size":537,"mtime":1610662044052,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"kqyuyf",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jbetancourt/Desktop/React-Projects/dictionary-app/src/index.js",[],["25","26"],"/Users/jbetancourt/Desktop/React-Projects/dictionary-app/src/App.js",["27"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nimport { Container, withStyles, Switch } from '@material-ui/core';\n\nimport Header from './components/Header/Header';\nimport Definitions from './components/Definitions/Definitions';\nimport { grey } from '@material-ui/core/colors';\n\nfunction App() {\n  const [word, setWord] = useState(\"\");\n  const [meanings, setMeanings] = useState([]);\n  const [category, setCategory] = useState('en');\n  const [lightMode, setLightMode] = useState(false)\n\n  const ThemeSwitch = withStyles({\n    switchBase: {\n      color: grey[300],\n      '&$checked': {\n        color: grey[500],\n      },\n      '&$checked + $track': {\n        backgroundColor: grey[500],\n      },\n    },\n    checked: {},\n    track: {},\n  })(Switch);\n\n  const dictionaryApi = async() => {\n    try {\n      const data = await axios.get(`https://api.dictionaryapi.dev/api/v2/entries/${category}/${word}`)\n\n      setMeanings(data.data);\n    } catch(error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    dictionaryApi();\n  }, [word, category])\n\n  return (\n    <div className=\"App\" \n      style={{ \n        backgroundColor: lightMode ? '#fff' : '#282c34',\n        color: lightMode ? 'black' : 'white',\n        transition: 'all 0.5s linear',\n      }}\n    >\n      <Container maxWidth=\"md\" className=\"AppContainer\" >\n        \n        <div style={{ position: 'absolute', top: 0, right: 15, paddingTop: 10 }}>\n          <span>{lightMode ? 'Dark' : 'Light'} Mode</span>\n          <ThemeSwitch checked={lightMode} onChange={() => setLightMode(!lightMode)} />\n        </div>\n\n        <Header \n          category={category} \n          setCategory={setCategory} \n          word={word} setWord={setWord} \n          lightMode={lightMode}\n        />\n        \n        {meanings && (\n          <Definitions word={word} meanings={meanings} category={category} lightMode={lightMode} />)\n        } \n\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jbetancourt/Desktop/React-Projects/dictionary-app/src/components/Definitions/Definitions.js",["28"],"import { light } from '@material-ui/core/styles/createPalette';\nimport React from 'react';\nimport './Definitions.css';\n\nconst Definitions = ({ word, meanings, category, lightMode }) => {\n    return (\n        <div className='meanings'>\n\n            {\n                meanings[0] && word && category === 'en' && (\n                    <audio \n                        className='audioStyle' \n                        src={meanings[0].phonetics[0] && meanings[0].phonetics[0].audio}\n                        controls\n                    >\n                        Your browser doesn't support audio element.\n                    </audio>\n                )\n            }\n\n            {\n                word === '' ? <span className='subTitle'>Start by typing a word in Search</span>\n                : (\n                    meanings.map((mean) => \n                        mean.meanings.map((item) => \n                            item.definitions.map((def) => (\n                                <div className='singleMeaning' \n                                    style={{ \n                                        backgroundColor: lightMode ? '#3b5360' : 'white',\n                                        color: lightMode ? 'white' : 'black'\n                                    }}>\n                                    <b>{def.definition}</b>\n                                    <hr className='hrStyle' />\n\n                                    {\n                                        def.example && (\n                                            <span>\n                                                <b>Example : </b>{def.example}\n                                            </span>\n                                        )\n                                    }\n                                    {def.synonyms && (\n                                        <span>\n                                            <b>Synonyms : </b>{def.synonyms.map((s) => `$(s), `)}\n                                        </span>\n                                    )}\n                                </div>\n                            ))\n                        )\n                    )\n                )\n\n            }\n        </div>\n    )\n}\n\nexport default Definitions\n","/Users/jbetancourt/Desktop/React-Projects/dictionary-app/src/components/Header/Header.js",[],"/Users/jbetancourt/Desktop/React-Projects/dictionary-app/src/data/categories.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":43,"column":6,"nodeType":"35","endLine":43,"endColumn":22,"suggestions":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":10,"nodeType":"39","messageId":"40","endLine":1,"endColumn":15},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dictionaryApi'. Either include it or remove the dependency array.","ArrayExpression",["43"],"no-unused-vars","'light' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"44","fix":"45"},"Update the dependencies array to be: [word, category, dictionaryApi]",{"range":"46","text":"47"},[1086,1102],"[word, category, dictionaryApi]"]